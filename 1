#include <Servo.h>

// Pines
const int ledAutomatico = 4;
const int ledManual = 5;
const int butAvanzar = 7;
const int butRegresar = 8;
const int butCambio = 6;
int potenciometro1 = A0;
int potenciometro2 = A1;
int potenciometro3 = A2;
int potenciometro4 = A3;

// Variables
int valor = 0;
bool cambioPresionado = false;

Servo servo1, servo2, servo3, servo4;

// Modo de operación
enum Modo { ModoAutomatico, ModoManual };
Modo modoActual = ModoManual;

// Estados anteriores para flanco
bool estadoAnteriorCambio = LOW;
bool estadoAnteriorAvanzar = LOW;
bool estadoAnteriorRegresar = LOW;

void setup() {
  Serial.begin(9600);

  pinMode(ledAutomatico, OUTPUT);
  pinMode(ledManual, OUTPUT);
  pinMode(butAvanzar, INPUT);
  pinMode(butRegresar, INPUT);
  pinMode(butCambio, INPUT);

  pinMode(potenciometro1, INPUT);
  pinMode(potenciometro2, INPUT);
  pinMode(potenciometro3, INPUT);
  pinMode(potenciometro4, INPUT);

  servo1.attach(12);
  servo2.attach(11);
  servo3.attach(10);
  servo4.attach(9);
}

void controlManual() {
  digitalWrite(ledManual, HIGH);
  digitalWrite(ledAutomatico, LOW);

  int val1 = analogRead(potenciometro1);
  int val2 = analogRead(potenciometro2);
  int val3 = analogRead(potenciometro3);
  int val4 = analogRead(potenciometro4);

  servo1.write(map(val1, 0, 1023, 0, 180));
  servo2.write(map(val2, 0, 1023, 0, 180));
  servo3.write(map(val3, 0, 1023, 0, 180));
  servo4.write(map(val4, 0, 1023, 0, 180));
}

void ejecutarEstadoAuto() {
  digitalWrite(ledManual, LOW);
  digitalWrite(ledAutomatico, HIGH);

  switch(valor) {
    case 0:
      servo1.write(0); servo2.write(20); servo3.write(30); servo4.write(0);
      break;
    case 1:
      servo1.write(45); servo2.write(25); servo3.write(35); servo4.write(45);
      break;
    case 2:
      servo1.write(90); servo2.write(20); servo3.write(20); servo4.write(90);
      break;
    case 3:
      servo1.write(135); servo2.write(15); servo3.write(25); servo4.write(135);
      break;
    case 4:
      servo1.write(180); servo2.write(40); servo3.write(25); servo4.write(180);
      break;
    case 5:
      servo1.write(90); servo2.write(25); servo3.write(35); servo4.write(90);
      break;
  }
}

void loop() {
  // Lectura de botones
  bool estadoCambio = digitalRead(butCambio);
  bool estadoAvanzar = digitalRead(butAvanzar);
  bool estadoRegresar = digitalRead(butRegresar);

  // Detectar flanco de subida en botón cambio
  if (estadoCambio == HIGH && estadoAnteriorCambio == LOW) {
    modoActual = (modoActual == ModoManual) ? ModoAutomatico : ModoManual;
    delay(200); // anti-rebote
  }
  estadoAnteriorCambio = estadoCambio;

  // Ejecutar lógica según modo
  if (modoActual == ModoManual) {
    controlManual();
  } else {
    // Detectar flanco de subida para avanzar
    if (estadoAvanzar == HIGH && estadoAnteriorAvanzar == LOW) {
      valor++;
      if (valor > 5) valor = 0;
      ejecutarEstadoAuto();
      delay(200);
    }

    // Detectar flanco de subida para regresar
    if (estadoRegresar == HIGH && estadoAnteriorRegresar == LOW) {
      valor--;
      if (valor < 0) valor = 5;
      ejecutarEstadoAuto();
      delay(200);
    }

    estadoAnteriorAvanzar = estadoAvanzar;
    estadoAnteriorRegresar = estadoRegresar;
  }
}
